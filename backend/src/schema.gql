# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  accessToken: String!
  usuario: Usuario!
}

type Categoria {
  id: ID!
  nome: String!
  slug: String!
}

input CriarProdutoInput {
  """ID da Categoria à qual o produto pertence"""
  categoriaId: ID!

  """Descrição detalhada do produto (opcional)"""
  descricao: String

  """URL da imagem principal do produto (opcional)"""
  imagemUrlPrincipal: String

  """Nome do produto"""
  nome: String!

  """Preço do produto"""
  preco: Float!

  """Quantidade inicial em estoque"""
  quantidadeEstoque: Int! = 0

  """Código único de referência do produto (SKU)"""
  sku: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EditarProdutoInput {
  """Novo ID da Categoria (opcional)"""
  categoriaId: ID

  """Nova descrição detalhada (opcional)"""
  descricao: String

  """Nova URL da imagem principal (opcional)"""
  imagemUrlPrincipal: String

  """Novo nome do produto (opcional)"""
  nome: String

  """Novo preço do produto (opcional)"""
  preco: Float

  """Nova quantidade em estoque (opcional)"""
  quantidadeEstoque: Int

  """Novo código SKU (opcional, deve ser único)"""
  sku: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  criarProduto(dados: CriarProdutoInput!): Produto!

  """Atualiza um produto existente (requer autenticação)."""
  editarProduto(dados: EditarProdutoInput!, id: ID!): Produto!

  """Autentica um usuário e retorna um token JWT."""
  login(dadosLogin: LoginInput!): AuthPayload!

  """Registra um novo usuário."""
  registrar(dadosRegistro: RegistroInput!): Usuario!
}

type Produto {
  categoria: Categoria!
  descricao: String
  emEstoque: Boolean!
  id: ID!
  imagemUrlPrincipal: String
  nome: String!
  preco: Float!

  """Quantidade atual em estoque"""
  quantidadeEstoque: Int!
  sku: String!
}

type Query {
  categorias: [Categoria!]!

  """Retorna dados do usuário logado."""
  meuPerfil: Usuario!
  produto(id: ID!): Produto
  produtos(categoriaSlug: String): [Produto!]!
}

input RegistroInput {
  email: String!
  nome: String!
  password: String!
}

type Usuario {
  criadoEm: DateTime!
  email: String!
  id: ID!
  nome: String!
}