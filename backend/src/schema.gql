# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  accessToken: String!
  usuario: Usuario!
}

type Carrinho {
  atualizadoEm: DateTime!
  criadoEm: DateTime!
  id: ID!
  itens: [ItemCarrinho]
  total: Float!
}

type Categoria {
  id: ID!
  nome: String!
  slug: String!
}

input CriarProdutoInput {
  """ID da Categoria à qual o produto pertence"""
  categoriaId: ID!

  """Descrição detalhada do produto (opcional)"""
  descricao: String

  """URL da imagem principal do produto (opcional)"""
  imagemUrlPrincipal: String

  """Nome do produto"""
  nome: String!

  """Preço do produto"""
  preco: Float!

  """Quantidade inicial em estoque"""
  quantidadeEstoque: Int! = 0

  """Código único de referência do produto (SKU)"""
  sku: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EditarProdutoInput {
  """Novo ID da Categoria (opcional)"""
  categoriaId: ID

  """Nova descrição detalhada (opcional)"""
  descricao: String

  """Nova URL da imagem principal (opcional)"""
  imagemUrlPrincipal: String

  """Novo nome do produto (opcional)"""
  nome: String

  """Novo preço do produto (opcional)"""
  preco: Float

  """Nova quantidade em estoque (opcional)"""
  quantidadeEstoque: Int

  """Novo código SKU (opcional, deve ser único)"""
  sku: String
}

input EnderecoDetalheInput {
  bairro: String!
  cep: String!
  cidade: String!
  complemento: String
  estado: String!
  numero: String!
  rua: String!
}

input EnderecoInput {
  entrega: EnderecoDetalheInput!
  faturamento: EnderecoDetalheInput
}

type EnderecoOutput {
  bairro: String!
  cep: String!
  cidade: String!
  complemento: String
  estado: String!
  numero: String!
  rua: String!
}

type Frete {
  """Prazo de entrega em dias úteis"""
  prazoEntrega: String!

  """Código do serviço (Ex: PAC, SEDEX)"""
  servico: String!

  """Valor do frete em Reais (R$)"""
  valor: Float!
}

type ItemCarrinho {
  adicionadoEm: DateTime!
  id: Int!
  precoUnitarioRegistrado: Float!
  produto: Produto
  produtoId: ID!
  quantidade: Int!
}

type ItemPedido {
  id: ID!
  nomeProduto: String
  precoUnitarioCompra: Float!
  produtoId: ID!
  quantidade: Int!
  skuProduto: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  adicionarItemAoCarrinho(produtoId: ID!, quantidade: Int!): Carrinho!
  atualizarQuantidadeItemCarrinho(itemCarrinhoId: Int!, novaQuantidade: Int!): Carrinho
  criarPedido(endereco: EnderecoInput!): Pedido!
  criarProduto(dados: CriarProdutoInput!): Produto!
  editarProduto(dados: EditarProdutoInput!, id: ID!): Produto!
  limparCarrinho: Carrinho

  """Autentica um usuário e retorna um token JWT."""
  login(dadosLogin: LoginInput!): AuthPayload!

  """Registra um novo usuário."""
  registrar(dadosRegistro: RegistroInput!): Usuario!
  removerItemDoCarrinho(itemCarrinhoId: Int!): Carrinho
}

"""Os possíveis status de um pedido no sistema."""
enum OrderStatus {
  CANCELED
  DELIVERED
  FAILED
  PAID
  PENDING
  PROCESSING
  SHIPPED
}

type Pedido {
  atualizadoEm: DateTime!
  criadoEm: DateTime!
  enderecoEntrega: EnderecoOutput!
  enderecoFaturamento: EnderecoOutput
  id: ID!
  itens: [ItemPedido!]!
  status: OrderStatus!
  usuario: Usuario!
  valorTotal: Float!
}

type Produto {
  categoria: Categoria!
  descricao: String
  emEstoque: Boolean!
  id: ID!
  imagemUrlPrincipal: String
  nome: String!
  preco: Float!

  """Quantidade atual em estoque"""
  quantidadeEstoque: Int!
  sku: String!
}

type ProdutoPaginadoOutput {
  """A lista de produtos para a página atual."""
  itens: [Produto!]!

  """O número da página atual."""
  pagina: Int!

  """O número total de produtos que correspondem à consulta."""
  total: Int!

  """O número total de páginas disponíveis."""
  totalPaginas: Int!
}

"""Opções para ordenação da lista de produtos."""
enum ProdutoSort {
  MAIS_RECENTES
  PRECO_ASC
  PRECO_DESC
}

type Query {
  calcularFrete(cep: String!): [Frete!]!
  categorias: [Categoria!]!
  meuCarrinho: Carrinho

  """Retorna dados do usuário logado."""
  meuPerfil: Usuario!
  meusPedidos: [Pedido!]!
  pedidoPorId(id: ID!): Pedido
  produto(id: ID!): Produto
  produtoPorSku(sku: String!): Produto
  produtos(categoriaSlug: String, limite: Int = 4, ordenacao: ProdutoSort = MAIS_RECENTES, pagina: Int = 1, termoBusca: String): ProdutoPaginadoOutput!
  produtosAleatorios(limite: Int = 4): [Produto!]!
}

input RegistroInput {
  email: String!
  nome: String!
  password: String!
}

type Usuario {
  criadoEm: DateTime!
  email: String!
  id: ID!
  nome: String!
}